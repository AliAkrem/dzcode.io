name: Deploy To Stage Environment

on:
  push:
    tags:
      - "stg-v*"
    # change to woklfow_dispatch for manual deploy
    branches:
      - "rspack"

jobs:
  install-build-deploy:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [20.x]
        os: [ubuntu-latest]

    env:
      CI: true
      STAGE: staging
      # SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
      SSH_ADDRESS_STG: ${{ secrets.SSH_ADDRESS_STG }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      # EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      DEPLOY_VERSION: ${{ github.ref_type == 'tag' && github.ref_name || format('stg-0.0.0-{0}-{1}-{2}', github.ref_name, github.run_number, github.run_attempt) }}

    steps:
      - name: "Git"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: "SSH"
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
      - name: "Nodejs"
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      # - name: "Expo"
      #   uses: expo/expo-github-action@v8
      #   with:
      #     expo-version: 4.x
      #     token: ${{ secrets.EXPO_TOKEN }}

      - name: "Install"
        shell: bash
        run: |
          yarn --frozen-lockfile --network-timeout 1000000

      - name: "Bundle info"
        shell: bash
        run: |
          yarn generate:bundle-info $DEPLOY_VERSION stage

      - name: "Build"
        shell: bash
        run: |
          yarn build
          yarn --cwd=web bundle:alone

      - name: "Sentry Release"
        shell: bash
        run: |
          yarn generate:sentry-release $DEPLOY_VERSION stage ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: "Deploy"
        shell: bash
        run: |
          yarn deploy:stg
