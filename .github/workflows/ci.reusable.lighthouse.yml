on:
  workflow_call:
    inputs:
      testBaseUrl:
        required: true
        type: string
      serverBaseUrl:
        required: true
        type: string
      stage:
        required: true
        type: string
        description: "staging or production"
    secrets:
      LH_SERVER_TOKEN_STG:
        required: true
      LH_SERVER_TOKEN_PRD:
        required: true

jobs:
  urls-for-lighthouse:
    runs-on: ubuntu-latest
    env:
      LH_TEST_BASE_URL: ${{ inputs.testBaseUrl }}
    steps:
      - name: "Git"
        uses: actions/checkout@v4
      - name: "Nodejs"
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build output (ubuntu-latest, 20)
      - name: Define Urls
        id: define-urls
        run: |
          node web/lighthouserc.cjs --output-urls >> "$GITHUB_OUTPUT"
    outputs:
      urls: ${{ steps.define-urls.outputs.urls }}

  lighthouse-collect:
    needs: urls-for-lighthouse
    runs-on: ubuntu-latest
    strategy:
      matrix:
        url: ${{fromJson(needs.urls-for-lighthouse.outputs.urls)}}
    env:
      LH_TEST_BASE_URL: ${{ inputs.testBaseUrl }}
      LH_OVERWRITE_URL: ${{ matrix.url }}

    steps:
      - name: "Git"
        uses: actions/checkout@v4
      - name: "Nodejs"
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build output (ubuntu-latest, 20)
      - run: npx lerna run lh:collect --scope "@dzcode.io/web"
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-${{inputs.stage}} output (${{ hashFiles('web/.lighthouseci/**') }})
          path: ./web/.lighthouseci/**
          if-no-files-found: error
          include-hidden-files: true
          retention-days: 1

  lighthouse-upload:
    needs: lighthouse-collect
    runs-on: ubuntu-latest
    env:
      LH_SERVER_BASE_URL: ${{ inputs.serverBaseUrl }}
      LH_SERVER_TOKEN: ${{ inputs.stage == 'staging' && secrets.LH_SERVER_TOKEN_STG || secrets.LH_SERVER_TOKEN_PRD }}
      # LHCI_BUILD_CONTEXT__COMMIT_TIME is set in "Get current time" step
      LHCI_BUILD_CONTEXT__AVATAR_URL: "https://avatars.githubusercontent.com/u/63493121?s=200&v=4"
      LHCI_BUILD_CONTEXT__AUTHOR: "dzcode-io"
      LHCI_BUILD_CONTEXT__CURRENT_BRANCH: "main"
      LHCI_BUILD_CONTEXT__COMMIT_MESSAGE: "Automated Lighthouse CI"
      LHCI_BUILD_CONTEXT__CURRENT_HASH: "run-${{ github.run_id }}-${{ github.run_number }}"
    steps:
      - name: "Git"
        uses: actions/checkout@v4
      - name: "Nodejs"
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build output (ubuntu-latest, 20)
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          pattern: lighthouse-${{inputs.stage}}*
          merge-multiple: true
          path: ./web/.lighthouseci
      - name: "Get current time"
        run: echo "LHCI_BUILD_CONTEXT__COMMIT_TIME=$(date '+%Y-%m-%d %H:%M:%S %z')" >> $GITHUB_ENV
      # @TODO-ZM: upload to grafana instead of lhci-server
      # - run: npx lerna run lh:upload --scope "@dzcode.io/web"
